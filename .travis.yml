language: cpp
sudo: required
dist: trusty

# Build against different versions of gcc and clang across both MacOS and Linux
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
            - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc6 && CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode8
      env:
        - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"

before_install:
    - eval "${MATRIX_EVAL}"

# Add encrypted API key
env:
  global:
    - secure: w9A42FYKr/Ha1C5QKjYlkJHU4tSjhpy0w/LAbxRDl0CkHMTtn3J+2Z/BylVD3Qjz5NqCDbMkgW1htZ6Ms1V2MmpCIncHNo5VMxtERkVYkPMMGjoBqqY8sOX3GpOXlRf7D6CJBY7wwf8w0/26kdLzGkRDnsUdFOjnlxTToDlclWDj6b5Xvwqve1No+fAxQUtAEuoiz/h04MK0F73r8fgfzXs7qRrgVgpXXtTOgK2O0wQFrnzufC5yd5AtMSYwcbBuRibeluYnfugp75Vn/mwcZuDeKF8w/muWLJRm/rdKiiCgjMCERuUPhxHaMPMkO/gYarNPfTEJC7gXPxedJTWAn+JsN1KddEgHLGry+nyQVyviiBHPLxkyOocAvll4MvtuZ55XK+Q4zq+PL6t8irZTJB4HNt8A/Ir+fdBx1gZhZ8rhXHpHcx0KmA1E6wWW1vS2F1kWih+08GpDg0/gu7XeuPtKhh6Zgpm3uRWP1rBtdqvbilFB1lKYba3QAlZggYCNORVdF0Q14NTMgGsCO+qTzkiIj6RyagtZ+ZjU8E9EOedo5g+Is1ysiAEk2sMOC1XbLq7LZEanmWgK9wrGPdGgZUdVpBhTGiyHDvUm34LjYpKXCtUogzJWfzyZbuEWKG9oya7K8IRTFhM/UOdUIDhkWyl9H4ih+kbpJoWM1hGrPH8=

before_install:
  # Add ppa for testing Ubuntu packages
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  # Get the latest version of the Geometrize library submodule, and push it to the remote (if necessary)
  - chmod +x ./travis_update_geometrize_submodule.sh
  - ./travis_update_geometrize_submodule.sh

install:
  - sudo apt-get install -qq g++-5
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 90
  - sudo apt-get install -y qt5-default qttools5-dev-tools

# Build the example program
script:
  - qmake geometrize-lib-example.pro
  - make