sudo: required
dist: trusty
language: cpp

# Add secure key for Github
env:
  global:
  - secure: w9A42FYKr/Ha1C5QKjYlkJHU4tSjhpy0w/LAbxRDl0CkHMTtn3J+2Z/BylVD3Qjz5NqCDbMkgW1htZ6Ms1V2MmpCIncHNo5VMxtERkVYkPMMGjoBqqY8sOX3GpOXlRf7D6CJBY7wwf8w0/26kdLzGkRDnsUdFOjnlxTToDlclWDj6b5Xvwqve1No+fAxQUtAEuoiz/h04MK0F73r8fgfzXs7qRrgVgpXXtTOgK2O0wQFrnzufC5yd5AtMSYwcbBuRibeluYnfugp75Vn/mwcZuDeKF8w/muWLJRm/rdKiiCgjMCERuUPhxHaMPMkO/gYarNPfTEJC7gXPxedJTWAn+JsN1KddEgHLGry+nyQVyviiBHPLxkyOocAvll4MvtuZ55XK+Q4zq+PL6t8irZTJB4HNt8A/Ir+fdBx1gZhZ8rhXHpHcx0KmA1E6wWW1vS2F1kWih+08GpDg0/gu7XeuPtKhh6Zgpm3uRWP1rBtdqvbilFB1lKYba3QAlZggYCNORVdF0Q14NTMgGsCO+qTzkiIj6RyagtZ+ZjU8E9EOedo5g+Is1ysiAEk2sMOC1XbLq7LZEanmWgK9wrGPdGgZUdVpBhTGiyHDvUm34LjYpKXCtUogzJWfzyZbuEWKG9oya7K8IRTFhM/UOdUIDhkWyl9H4ih+kbpJoWM1hGrPH8=

# Setup build matrix
matrix:
  include:
  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-4.9
    env:
    - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-5
    env:
    - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-6
    env:
    - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - g++-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.6
        packages:
        - clang-3.6
    env:
    - MATRIX_EVAL="CC=clang-3.6 && CXX=clang++-3.6"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.7
        packages:
        - clang-3.7
    env:
    - MATRIX_EVAL="CC=clang-3.7 && CXX=clang++-3.7"

  - os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.8
        packages:
        - clang-3.8
    env:
    - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

  - os: linux
    addons:
      apt:
        sources:
        - llvm-toolchain-trusty-3.9
        packages:
        - clang-3.9
    env:
    - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

  - os: linux
    addons:
      apt:
        sources:
        - llvm-toolchain-trusty-4.0
        packages:
        - clang-4.0
    env:
    - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

  - os: linux
    addons:
      apt:
        sources:
        - llvm-toolchain-trusty-5.0
        packages:
        - clang-5.0
    env:
    - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"

  - os: osx
    osx_image: xcode8
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"
    - OSX_IMAGE_NAME="xcode_8_0"

  - os: osx
    osx_image: xcode8.1
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"
    - OSX_IMAGE_NAME="xcode_8_1"

  - os: osx
    osx_image: xcode8.2
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"
    - OSX_IMAGE_NAME="xcode_8_2"

  - os: osx
    osx_image: xcode8.3
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"
    - OSX_IMAGE_NAME="xcode_8_3"

  - os: osx
    osx_image: xcode9
    env:
    - MATRIX_EVAL="CC=clang && CXX=clang++"
    - OSX_IMAGE_NAME="xcode_9_0"

before_install:
  # Get the latest versions of the submodules, and push to the remotes (if necessary)
  - chmod +x ./travis_update_geometrize_submodule.sh
  - "./travis_update_geometrize_submodule.sh"

  # Set compilers
  - eval "${MATRIX_EVAL}"
  - echo $CC
  - echo $CXX

install:
  # Get qmake
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install qt ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link --force qt ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y qt5-default qttools5-dev-tools ; fi

script:
  - qmake geometrize-lib-example.pro
  - make CC=${CC} CXX=${CXX} LINK=${CXX}

before_deploy:
  - pushd ${TRAVIS_BUILD_DIR}
  - mkdir build
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv geometrize_lib_example build/geometrize_lib_example_${TRAVIS_BUILD_NUMBER}_${TRAVIS_OS_NAME}_${CXX} ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mv geometrize_lib_example.app build/geometrize_lib_example_${TRAVIS_JOB_NUMBER}_${TRAVIS_OS_NAME}_${OSX_IMAGE_NAME} ; fi
  - popd

# Deploy to Amazon S3
deploy:
  provider: s3
  access_key_id: ${AWS_ACCESS_KEY_ID}
  secret_access_key: ${AWS_SECRET_ACCESS_KEY}
  bucket: ${AWS_S3_BUCKET_NAME}
  local_dir: build
  skip_cleanup: true
  upload-dir: ${TRAVIS_OS_NAME}
  acl: public_read