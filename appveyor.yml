environment:
  matrix:
    - QTDIR: C:\Qt\5.9\mingw53_32
      MINGW: C:\Qt\Tools\mingw53_32
    - QTDIR: C:\Qt\5.7\msvc2015
    - QTDIR: C:\Qt\5.7\msvc2015_64

configuration:
  - debug
  - release

# Get the project submodules
# Set the environment variables and paths to make
install:
  - git submodule update --init --recursive
  - '%QTDIR%\bin\qtenv2.bat'
  - set PATH=%PATH%;%QTDIR%\bin;%MINGW%\bin
  - if %QTDIR:msvc=%==%QTDIR% set make=mingw32-make.exe
  - if %QTDIR:_64=%==%QTDIR% ( set ARCH=x86 ) else set ARCH=x64
  - if not %QTDIR:msvc2015=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc2017=%==%QTDIR% call "%ProgramFiles(x86)%\Microsoft Visual Studio 15.0\VC\vcvarsall.bat" %ARCH%
  - if not %QTDIR:msvc=%==%QTDIR% set make=nmake.exe
  - if not %QTDIR:msvc=%==%QTDIR% %make% /? > nul

# Run qmake
before_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - qmake -Wall geometrize-lib-example.pro

# Build the project
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - '%make%'
  - dir
  - move geometrize_lib_example.exe geometrize_lib_example_%APPVEYOR_BUILD_NUMBER%_%APPVEYOR_BUILD_ID%_%CONFIGURATION%_%PLATFORM%.exe

artifacts:
  - path: geometrize_lib_example_%APPVEYOR_BUILD_NUMBER%_%APPVEYOR_BUILD_NUMBER%_%CONFIGURATION%_%PLATFORM%.exe
    name: geometrize_lib_example
    type: zip

deploy:
  provider: S3
  access_key_id: %AWS_ACCESS_KEY_ID%
  secret_access_key: %AWS_SECRET_ACCESS_KEY%
  bucket: %AWS_S3_BUCKET_NAME%
  region: us-east-1
  unzip: true
  set_public: true
  folder: windows
  artifact: geometrize_lib_example